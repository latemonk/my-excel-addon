{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://worksai-excel-addon/webpack/bootstrap","webpack://worksai-excel-addon/webpack/runtime/global","webpack://worksai-excel-addon/webpack/runtime/hasOwnProperty shorthand","webpack://worksai-excel-addon/webpack/runtime/make namespace object","webpack://worksai-excel-addon/webpack/runtime/publicPath","webpack://worksai-excel-addon/webpack/runtime/jsonp chunk loading","webpack://worksai-excel-addon/./src/taskpane/taskpane.html","webpack://worksai-excel-addon/./src/taskpane/taskpane.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"taskpane\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html>\\n<html>\\n\\n<head>\\n    <meta charset=\\\"UTF-8\\\" />\\n    <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\" />\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n    <title>웍스AI 엑셀 도우미</title>\\n\\n    <!-- Office JavaScript API -->\\n    <\" + \"script type=\\\"text/javascript\\\" src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script>\\n\\n    <!-- For more information on Fluent UI, visit https://developer.microsoft.com/fluentui#/. -->\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-js/1.4.0/css/fabric.min.css\\\" />\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-js/1.4.0/css/fabric.components.min.css\\\" />\\n\\n    <!-- Template styles -->\\n    <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\" />\\n</head>\\n\\n<body class=\\\"ms-font-m ms-welcome ms-Fabric\\\">\\n    <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"header-section\\\">\\n                <h2 class=\\\"ms-font-xl\\\">웍스AI 엑셀 도우미</h2>\\n                <p class=\\\"help-text\\\">자연어로 Excel 작업을 요청하세요. (대용량 번역 지원)</p>\\n            </div>\\n\\n            <!-- Voice Input Section -->\\n            <div class=\\\"voice-section\\\">\\n                <button id=\\\"voiceButton\\\" class=\\\"voice-button\\\">\\n                    <svg width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n                        <path d=\\\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3z\\\"/>\\n                        <path d=\\\"M17 11c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z\\\"/>\\n                    </svg>\\n                </button>\\n                <div class=\\\"voice-status\\\" id=\\\"voiceStatus\\\">음성 인식 준비</div>\\n            </div>\\n\\n            <div class=\\\"input-container\\\">\\n                <textarea \\n                    id=\\\"commandInput\\\" \\n                    placeholder=\\\"예: A1부터 A10까지 합계를 구해줘\\\"\\n                    rows=\\\"3\\\"\\n                ></textarea>\\n                \\n                <div class=\\\"button-container\\\">\\n                    <button id=\\\"executeButton\\\" class=\\\"ms-Button ms-Button--primary\\\">\\n                        <span class=\\\"ms-Button-label\\\">실행</span>\\n                    </button>\\n                    <button id=\\\"clearButton\\\" class=\\\"ms-Button\\\">\\n                        <span class=\\\"ms-Button-label\\\">지우기</span>\\n                    </button>\\n                </div>\\n            </div>\\n\\n            <div id=\\\"status\\\" class=\\\"status-message\\\"></div>\\n\\n            <div class=\\\"examples\\\">\\n                <h3>예제 명령어</h3>\\n                <div class=\\\"example-list\\\">\\n                    <div class=\\\"example-item\\\" data-command=\\\"A1:B5 셀을 병합해줘\\\">\\n                        <strong>셀 병합:</strong> A1:B5 셀을 병합해줘\\n                    </div>\\n                    <div class=\\\"example-item\\\" data-command=\\\"A열의 합계를 구해줘\\\">\\n                        <strong>합계 계산:</strong> A열의 합계를 구해줘\\n                    </div>\\n                    <div class=\\\"example-item\\\" data-command=\\\"Name 열의 합계를 구해줘\\\">\\n                        <strong>레이블로 합계:</strong> Name 열의 합계를 구해줘\\n                    </div>\\n                    <div class=\\\"example-item\\\" data-command=\\\"선택한 셀을 굵게 만들고 파란색으로 바꿔줘\\\">\\n                        <strong>서식 지정:</strong> 선택한 셀을 굵게 만들고 파란색으로 바꿔줘\\n                    </div>\\n                    <div class=\\\"example-item\\\" data-command=\\\"B열 기준으로 내림차순 정렬해줘\\\">\\n                        <strong>정렬:</strong> B열 기준으로 내림차순 정렬해줘\\n                    </div>\\n                    <div class=\\\"example-item\\\" data-command=\\\"값이 100보다 큰 셀은 녹색 배경으로 표시해줘\\\">\\n                        <strong>조건부 서식:</strong> 값이 100보다 큰 셀은 녹색 배경으로 표시해줘\\n                    </div>\\n                    <div class=\\\"example-item\\\" data-command=\\\"A1:B10 데이터로 막대 차트를 만들어줘\\\">\\n                        <strong>차트 생성:</strong> A1:B10 데이터로 막대 차트를 만들어줘\\n                    </div>\\n                    <div class=\\\"example-item\\\" data-command=\\\"D열을 중국어로 번역해서 다음 열에 추가해줘\\\">\\n                        <strong>번역:</strong> D열을 중국어로 번역해서 다음 열에 추가해줘\\n                    </div>\\n                    <div class=\\\"example-item\\\" data-command=\\\"A열의 10000개 행을 영어로 번역해줘\\\">\\n                        <strong>대용량 번역:</strong> A열의 10000개 행을 영어로 번역해줘\\n                    </div>\\n                    <div class=\\\"example-item\\\" data-command=\\\"D2:D170 사이의 빈 행을 제거해줘\\\">\\n                        <strong>빈 행 제거:</strong> D2:D170 사이의 빈 행을 제거해줘\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"settings-section\\\">\\n                <button id=\\\"settingsButton\\\" class=\\\"settings-link\\\">설정</button>\\n            </div>\\n        </div>\\n    </main>\\n</body>\\n\\n</html>\";\n// Exports\nexport default code;","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global document, Office, Excel */\n\n// Voice recognition variables\nlet recognition = null;\nlet isListening = false;\n\n// Backend API URL - Vercel 배포 후 실제 URL로 변경해주세요\n// 디버그용 URL 사용 중 (CORS 문제 해결 후 원래 URL로 변경 필요)\nconst API_PROXY_URL = process.env.API_PROXY_URL || 'https://excel-addon-backend.vercel.app/api/openai-proxy-debug';\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n    // Test backend connection\n    testBackendConnection();\n    \n    // Assign event handlers\n    document.getElementById(\"executeButton\").onclick = executeCommand;\n    document.getElementById(\"clearButton\").onclick = clearInput;\n    document.getElementById(\"voiceButton\").onclick = toggleVoiceRecognition;\n    document.getElementById(\"settingsButton\").onclick = showSettings;\n\n    // Handle example clicks\n    const exampleItems = document.querySelectorAll('.example-item');\n    exampleItems.forEach(item => {\n      item.onclick = function() {\n        setCommand(this.getAttribute('data-command'));\n      };\n    });\n\n    // Handle Enter key\n    document.getElementById('commandInput').addEventListener('keydown', function(event) {\n      if (event.key === 'Enter' && !event.shiftKey) {\n        event.preventDefault();\n        executeCommand();\n      }\n    });\n\n    // Initialize speech recognition\n    initializeSpeechRecognition();\n  }\n});\n\n// Initialize speech recognition\nfunction initializeSpeechRecognition() {\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  \n  if (!SpeechRecognition) {\n    showStatus('음성 인식이 지원되지 않는 브라우저입니다.', 'error');\n    document.getElementById('voiceButton').disabled = true;\n    document.getElementById('voiceStatus').textContent = '음성 인식 미지원';\n    return null;\n  }\n  \n  recognition = new SpeechRecognition();\n  recognition.lang = 'ko-KR';\n  recognition.continuous = false;\n  recognition.interimResults = true;\n  recognition.maxAlternatives = 1;\n  \n  recognition.onstart = function() {\n    isListening = true;\n    document.getElementById('voiceButton').classList.add('listening');\n    document.getElementById('voiceStatus').textContent = '듣고 있습니다... 말씀해주세요';\n    document.getElementById('voiceStatus').classList.add('listening');\n  };\n  \n  recognition.onresult = function(event) {\n    const transcript = event.results[0][0].transcript;\n    document.getElementById('commandInput').value = transcript;\n    \n    if (event.results[0].isFinal) {\n      document.getElementById('voiceStatus').textContent = '음성 인식 완료';\n    } else {\n      document.getElementById('voiceStatus').textContent = '인식중: ' + transcript;\n    }\n  };\n  \n  recognition.onerror = function(event) {\n    isListening = false;\n    document.getElementById('voiceButton').classList.remove('listening');\n    document.getElementById('voiceStatus').classList.remove('listening');\n    \n    let errorMessage = '음성 인식 오류';\n    switch(event.error) {\n      case 'no-speech':\n        errorMessage = '음성이 감지되지 않았습니다.';\n        break;\n      case 'audio-capture':\n        errorMessage = '마이크를 찾을 수 없습니다.';\n        break;\n      case 'not-allowed':\n        errorMessage = '마이크 권한이 거부되었습니다.';\n        break;\n      case 'network':\n        errorMessage = '네트워크 오류가 발생했습니다.';\n        break;\n    }\n    \n    document.getElementById('voiceStatus').textContent = errorMessage;\n    showStatus(errorMessage, 'error');\n  };\n  \n  recognition.onend = function() {\n    isListening = false;\n    document.getElementById('voiceButton').classList.remove('listening');\n    document.getElementById('voiceStatus').classList.remove('listening');\n    \n    const command = document.getElementById('commandInput').value.trim();\n    if (command) {\n      document.getElementById('voiceStatus').textContent = '음성 인식 완료. 실행 버튼을 눌러주세요.';\n      document.getElementById('executeButton').focus();\n    } else {\n      document.getElementById('voiceStatus').textContent = '음성 인식 준비';\n    }\n  };\n  \n  return recognition;\n}\n\n// Toggle voice recognition\nfunction toggleVoiceRecognition() {\n  if (!recognition) {\n    recognition = initializeSpeechRecognition();\n    if (!recognition) return;\n  }\n  \n  if (isListening) {\n    recognition.stop();\n  } else {\n    recognition.start();\n  }\n}\n\n// Execute command\n// Add flag to prevent duplicate execution\nlet isExecuting = false;\n\nasync function executeCommand() {\n  // Prevent duplicate execution\n  if (isExecuting) {\n    console.log('Command already executing, ignoring duplicate call');\n    return;\n  }\n  \n  const command = document.getElementById('commandInput').value.trim();\n  \n  if (!command) {\n    showStatus('명령어를 입력해주세요.', 'error');\n    return;\n  }\n  \n  isExecuting = true;\n  \n  const button = document.getElementById('executeButton');\n  const originalText = '<span class=\"ms-Button-label\">실행</span>';\n  \n  // Show loading state\n  button.disabled = true;\n  button.innerHTML = '<span class=\"loading\"></span><span>처리중...</span>';\n  showStatus('명령을 처리하고 있습니다...', 'info');\n  \n  try {\n    await Excel.run(async (context) => {\n      console.log('Starting Excel.run for command execution');\n      // Get current worksheet context\n      const worksheet = context.workbook.worksheets.getActiveWorksheet();\n      const range = context.workbook.getSelectedRange();\n      \n      // Load necessary properties\n      worksheet.load(\"name\");\n      range.load([\"address\", \"rowIndex\", \"columnIndex\", \"rowCount\", \"columnCount\"]);\n      \n      // Get sheet data for context\n      const usedRange = worksheet.getUsedRange();\n      usedRange.load([\"rowCount\", \"columnCount\", \"values\"]);\n      \n      await context.sync();\n      \n      // Build sheet context\n      const sheetContext = {\n        sheetName: worksheet.name,\n        activeRange: {\n          address: range.address,\n          row: range.rowIndex + 1,\n          column: range.columnIndex + 1,\n          numRows: range.rowCount,\n          numColumns: range.columnCount\n        },\n        lastRow: usedRange ? usedRange.rowCount : 0,\n        lastColumn: usedRange ? usedRange.columnCount : 0,\n        headers: [],\n        dataRange: usedRange ? usedRange.values : [],\n        isLargeSheet: usedRange && usedRange.rowCount > 1000\n      };\n      \n      // Extract headers\n      if (usedRange && usedRange.rowCount > 0) {\n        const headerRow = usedRange.values[0];\n        for (let i = 0; i < headerRow.length; i++) {\n          sheetContext.headers.push({\n            column: i + 1,\n            columnLetter: getColumnLetter(i),\n            label: headerRow[i] ? headerRow[i].toString() : ''\n          });\n        }\n      }\n      \n      // Call OpenAI API to interpret the command\n      const interpretation = await callOpenAI(command, sheetContext);\n      \n      if (!interpretation.success) {\n        throw new Error(interpretation.error);\n      }\n      \n      // Execute the interpreted command\n      console.log('Executing interpreted command...');\n      const result = await executeInterpretedCommand(context, interpretation.data);\n      console.log('Command execution result:', result);\n      \n      // Reset button and show success\n      button.disabled = false;\n      button.innerHTML = originalText;\n      \n      if (result.success) {\n        console.log('Operation completed successfully:', result);\n        showStatus(result.message || '명령이 성공적으로 실행되었습니다.', 'success');\n        setTimeout(() => {\n          document.getElementById('commandInput').value = '';\n        }, 1000);\n      } else {\n        console.error('Operation failed:', result);\n        showStatus(result.error || '명령 실행에 실패했습니다.', 'error');\n      }\n      \n      console.log('Excel.run completing...');\n    });\n    console.log('Excel.run completed');\n  } catch (error) {\n    console.error('Error in executeCommand:', error);\n    console.error('Error stack:', error.stack);\n    button.disabled = false;\n    button.innerHTML = originalText;\n    showStatus('오류가 발생했습니다: ' + error.message, 'error');\n  } finally {\n    // Reset execution flag\n    isExecuting = false;\n  }\n}\n\n// Call OpenAI API through proxy\nasync function callOpenAI(command, sheetContext) {\n  try {\n    const response = await fetch(API_PROXY_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        command: command,\n        sheetContext: sheetContext\n      })\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json();\n      return {\n        success: false,\n        error: errorData.error || `서버 오류 (${response.status})`\n      };\n    }\n    \n    return await response.json();\n    \n  } catch (error) {\n    console.error('Proxy API Error:', error);\n    return {\n      success: false,\n      error: `API 요청 오류: ${error.toString()}`\n    };\n  }\n}\n\n// Original OpenAI API call (no longer used)\nasync function callOpenAIDirectly(command, sheetContext) {\n  const systemPrompt = `You are an Excel assistant that interprets natural language commands and returns JSON instructions for Excel operations.\n  \nAvailable operations:\n1. merge: Merge cells\n2. sum: Sum values in a range or column\n3. average: Calculate average\n4. count: Count cells (can count all, numbers only, or based on conditions)\n5. format: Format cells (bold, italic, font color, background color, etc.)\n6. sort: Sort data\n7. filter: Filter data\n8. insert: Insert rows/columns\n9. delete: Delete rows/columns\n10. formula: Add custom formula\n11. chart: Create chart\n12. conditional_format: Add conditional formatting\n13. translate: Translate cell contents to another language\n14. compress: Remove empty rows in a specific column range\n15. retry_translation: Retry translation for failed items marked as [번역 실패]\n\nFor sum operation:\n- If user mentions a column by header name (e.g., \"totalToken 열의 합\", \"totalToken 합산\"), return: { \"sumType\": \"column\", \"columnName\": \"totalToken\" }\n- The system will automatically find the column, determine the data range, and place the sum in the first empty cell below the data\n- For specific range sum, use: { \"sourceRange\": \"A2:A10\" }\n- For adding sum below selection, use: { \"addNewRow\": true }\n\nCurrent sheet context:\n- Active range: ${sheetContext.activeRange.address}\n- Sheet dimensions: ${sheetContext.lastRow} rows x ${sheetContext.lastColumn} columns\n- Headers: ${sheetContext.headers.map(h => `Column ${h.columnLetter}: \"${h.label}\"`).join(', ')}\n\nReturn JSON in this format:\n{\n  \"operation\": \"operation_name\",\n  \"parameters\": {\n    // operation-specific parameters\n  }\n}`;\n\n  const url = 'https://api.openai.com/v1/chat/completions';\n  \n  const payload = {\n    model: 'gpt-4.1-2025-04-14',\n    messages: [\n      { role: 'system', content: systemPrompt },\n      { role: 'user', content: `Current Excel state:\nHeaders: ${sheetContext.headers.map(h => `Column ${h.columnLetter}: \"${h.label}\"`).join(', ')}\nActive sheet: ${sheetContext.sheetName}\n\nUser command: ${command}` }\n    ],\n    temperature: 0.3,\n    max_tokens: 500\n  };\n  \n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${OPENAI_API_KEY}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json();\n      if (response.status === 429) {\n        return {\n          success: false,\n          error: 'API 요청 한도를 초과했습니다. 잠시 후 다시 시도해주세요.'\n        };\n      } else if (response.status === 401) {\n        return {\n          success: false,\n          error: 'API 키가 유효하지 않습니다. API 키를 확인해주세요.'\n        };\n      }\n      return {\n        success: false,\n        error: `API 오류 (${response.status}): ${errorData.error?.message || '알 수 없는 오류'}`\n      };\n    }\n    \n    const result = await response.json();\n    \n    if (result.choices && result.choices[0]) {\n      const content = result.choices[0].message.content;\n      try {\n        const parsedCommand = JSON.parse(content);\n        return {\n          success: true,\n          data: parsedCommand\n        };\n      } catch (parseError) {\n        console.error('Failed to parse AI response:', content);\n        return {\n          success: false,\n          error: 'AI 응답을 해석할 수 없습니다. 다시 시도해주세요.'\n        };\n      }\n    } else {\n      return {\n        success: false,\n        error: 'OpenAI API 응답을 파싱할 수 없습니다.'\n      };\n    }\n  } catch (error) {\n    console.error('OpenAI API Error:', error);\n    return {\n      success: false,\n      error: `OpenAI API 오류: ${error.toString()}`\n    };\n  }\n}\n\n// Execute the interpreted command\nasync function executeInterpretedCommand(context, commandData) {\n  const operation = commandData.operation;\n  const params = commandData.parameters || {};\n  \n  console.log(`[${new Date().toISOString()}] Executing operation: ${operation} with params:`, params);\n  \n  try {\n    switch (operation) {\n      case 'merge':\n        return await executeMerge(context, params);\n      \n      case 'sum':\n        return await executeSum(context, params);\n      \n      case 'average':\n        return await executeAverage(context, params);\n      \n      case 'count':\n        return await executeCount(context, params);\n      \n      case 'format':\n        return await executeFormat(context, params);\n      \n      case 'sort':\n        return await executeSort(context, params);\n      \n      case 'filter':\n        return await executeFilter(context, params);\n      \n      case 'insert':\n        return await executeInsert(context, params);\n      \n      case 'delete':\n        return await executeDelete(context, params);\n      \n      case 'formula':\n        return await executeFormula(context, params);\n      \n      case 'chart':\n        return await executeChart(context, params);\n      \n      case 'conditional_format':\n        return await executeConditionalFormat(context, params);\n      \n      case 'translate':\n        return await executeTranslate(context, params);\n      \n      case 'compress':\n        return await executeCompress(context, params);\n      \n      case 'retry_translation':\n        return await executeRetryTranslation(context, params);\n      \n      default:\n        return {\n          success: false,\n          error: `알 수 없는 작업: ${operation}`\n        };\n    }\n  } catch (error) {\n    console.error('Error in executeInterpretedCommand:', error);\n    return {\n      success: false,\n      error: `작업 실행 중 오류: ${error.message || error.toString()}`\n    };\n  }\n}\n\n// Merge cells\nasync function executeMerge(context, params) {\n  console.log('executeMerge started with params:', params);\n  const worksheet = context.workbook.worksheets.getActiveWorksheet();\n  const range = params.range ? worksheet.getRange(params.range) : context.workbook.getSelectedRange();\n  \n  console.log('Loading range address...');\n  // Load address property before using it\n  range.load('address');\n  await context.sync();\n  \n  console.log('Range address loaded:', range.address);\n  const rangeAddress = range.address;\n  \n  console.log('Merging range...');\n  range.merge();\n  await context.sync();\n  \n  console.log('Merge completed successfully');\n  return {\n    success: true,\n    message: `${rangeAddress} 범위가 병합되었습니다.`\n  };\n}\n\n// Sum values\nasync function executeSum(context, params) {\n  const worksheet = context.workbook.worksheets.getActiveWorksheet();\n  \n  // If column name is provided, find the column and create range\n  if (params.columnName || params.sumType === 'column') {\n    console.log('Sum by column name:', params.columnName);\n    \n    // Get sheet context to find column by name\n    const usedRange = worksheet.getUsedRange();\n    usedRange.load([\"values\", \"rowCount\", \"columnCount\"]);\n    await context.sync();\n    \n    if (!usedRange || usedRange.rowCount === 0) {\n      return {\n        success: false,\n        error: '시트에 데이터가 없습니다.'\n      };\n    }\n    \n    // Find column by header name\n    const headers = usedRange.values[0];\n    let columnIndex = -1;\n    let columnLetter = '';\n    \n    for (let i = 0; i < headers.length; i++) {\n      if (headers[i] && headers[i].toString().toLowerCase() === (params.columnName || '').toLowerCase()) {\n        columnIndex = i;\n        columnLetter = getColumnLetter(i);\n        break;\n      }\n    }\n    \n    if (columnIndex === -1) {\n      return {\n        success: false,\n        error: `\"${params.columnName}\" 열을 찾을 수 없습니다.`\n      };\n    }\n    \n    // Find last row with data in this column\n    let lastDataRow = 1; // Start from row 2 (after header)\n    for (let row = 1; row < usedRange.rowCount; row++) {\n      if (usedRange.values[row][columnIndex] !== null && \n          usedRange.values[row][columnIndex] !== undefined && \n          usedRange.values[row][columnIndex] !== '') {\n        lastDataRow = row + 1; // +1 because Excel rows are 1-indexed\n      }\n    }\n    \n    // Create range from row 2 to last data row\n    const rangeAddress = `${columnLetter}2:${columnLetter}${lastDataRow}`;\n    const sumCell = worksheet.getCell(lastDataRow, columnIndex); // getCell uses 0-based row index\n    \n    console.log(`Summing range: ${rangeAddress}, placing result in row ${lastDataRow + 1}`);\n    \n    sumCell.formulas = [[`=SUM(${rangeAddress})`]];\n    await context.sync();\n    \n    sumCell.load([\"values\", \"address\"]);\n    await context.sync();\n    \n    return {\n      success: true,\n      message: `${params.columnName} 열의 합계를 ${sumCell.address}에 계산했습니다: ${formatNumber(sumCell.values[0][0])}`,\n      value: sumCell.values[0][0]\n    };\n  }\n  \n  // Original logic for range-based sum\n  const sourceRange = params.sourceRange ? worksheet.getRange(params.sourceRange) : context.workbook.getSelectedRange();\n  \n  sourceRange.load([\"columnIndex\", \"rowIndex\", \"rowCount\", \"address\"]);\n  await context.sync();\n  \n  if (params.addNewRow === true) {\n    // Add new row for sum\n    const column = sourceRange.columnIndex;\n    const lastRow = sourceRange.rowIndex + sourceRange.rowCount;\n    const newCell = worksheet.getCell(lastRow, column);\n    \n    newCell.formulas = [[`=SUM(${sourceRange.address})`]];\n    await context.sync();\n    \n    newCell.load([\"values\", \"address\"]);\n    await context.sync();\n    \n    return {\n      success: true,\n      message: `${newCell.address}에 합계를 계산했습니다: ${formatNumber(newCell.values[0][0])}`,\n      value: newCell.values[0][0]\n    };\n  } else if (params.targetCell) {\n    // Sum to specific cell\n    const targetCell = worksheet.getRange(params.targetCell);\n    targetCell.formulas = [[`=SUM(${sourceRange.address})`]];\n    await context.sync();\n    \n    targetCell.load([\"values\", \"address\"]);\n    await context.sync();\n    \n    return {\n      success: true,\n      message: `${targetCell.address}에 합계를 계산했습니다: ${formatNumber(targetCell.values[0][0])}`,\n      value: targetCell.values[0][0]\n    };\n  } else {\n    // Default: add sum below the range\n    const column = sourceRange.columnIndex;\n    const lastRow = sourceRange.rowIndex + sourceRange.rowCount;\n    const newCell = worksheet.getCell(lastRow, column);\n    \n    newCell.formulas = [[`=SUM(${sourceRange.address})`]];\n    await context.sync();\n    \n    newCell.load([\"values\", \"address\"]);\n    await context.sync();\n    \n    return {\n      success: true,\n      message: `${newCell.address}에 합계를 계산했습니다: ${formatNumber(newCell.values[0][0])}`,\n      value: newCell.values[0][0]\n    };\n  }\n}\n\n// Calculate average\nasync function executeAverage(context, params) {\n  const worksheet = context.workbook.worksheets.getActiveWorksheet();\n  const sourceRange = params.sourceRange ? worksheet.getRange(params.sourceRange) : context.workbook.getSelectedRange();\n  \n  sourceRange.load([\"columnIndex\", \"rowIndex\", \"rowCount\", \"address\"]);\n  await context.sync();\n  \n  if (params.targetCell) {\n    const targetCell = worksheet.getRange(params.targetCell);\n    targetCell.formulas = [[`=AVERAGE(${sourceRange.address})`]];\n    await context.sync();\n    \n    targetCell.load([\"values\", \"address\"]);\n    await context.sync();\n    \n    return {\n      success: true,\n      message: `${targetCell.address}에 평균을 계산했습니다: ${formatNumber(targetCell.values[0][0])}`,\n      value: targetCell.values[0][0]\n    };\n  } else {\n    const column = sourceRange.columnIndex;\n    const lastRow = sourceRange.rowIndex + sourceRange.rowCount;\n    const newCell = worksheet.getCell(lastRow, column);\n    \n    newCell.formulas = [[`=AVERAGE(${sourceRange.address})`]];\n    await context.sync();\n    \n    newCell.load([\"values\", \"address\"]);\n    await context.sync();\n    \n    return {\n      success: true,\n      message: `${newCell.address}에 평균을 계산했습니다: ${formatNumber(newCell.values[0][0])}`,\n      value: newCell.values[0][0]\n    };\n  }\n}\n\n// Count cells\nasync function executeCount(context, params) {\n  const worksheet = context.workbook.worksheets.getActiveWorksheet();\n  const sourceRange = params.sourceRange ? worksheet.getRange(params.sourceRange) : context.workbook.getSelectedRange();\n  \n  sourceRange.load([\"address\"]);\n  await context.sync();\n  \n  let formula;\n  if (params.countType === 'countif' && params.condition !== undefined) {\n    let criteria;\n    if (params.operator === 'contains') {\n      criteria = `\"*${params.condition}*\"`;\n    } else if (params.operator === 'equals') {\n      criteria = typeof params.condition === 'string' ? `\"${params.condition}\"` : params.condition;\n    } else if (params.operator && ['>', '<', '>=', '<=', '<>'].includes(params.operator)) {\n      criteria = `\"${params.operator}${params.condition}\"`;\n    } else {\n      if (typeof params.condition === 'string') {\n        criteria = `\"*${params.condition}*\"`;\n      } else {\n        criteria = params.condition;\n      }\n    }\n    formula = `=COUNTIF(${sourceRange.address}, ${criteria})`;\n  } else if (params.countType === 'counta') {\n    formula = `=COUNTA(${sourceRange.address})`;\n  } else {\n    formula = `=COUNT(${sourceRange.address})`;\n  }\n  \n  let resultCell;\n  if (params.targetCell) {\n    resultCell = worksheet.getRange(params.targetCell);\n  } else {\n    const usedRange = worksheet.getUsedRange();\n    await context.sync();\n    \n    const lastRow = usedRange ? usedRange.rowCount : 1;\n    const lastCol = usedRange ? usedRange.columnCount : 1;\n    resultCell = worksheet.getCell(lastRow, lastCol);\n  }\n  \n  resultCell.formulas = [[formula]];\n  await context.sync();\n  \n  resultCell.load(\"values\");\n  await context.sync();\n  \n  return {\n    success: true,\n    message: params.countType === 'countif' ? \n      `\"${params.condition}\"을(를) 포함하는 셀의 개수: ${formatNumber(resultCell.values[0][0])}개` :\n      `개수를 계산했습니다: ${formatNumber(resultCell.values[0][0])}개`,\n    value: resultCell.values[0][0]\n  };\n}\n\n// Format cells\nasync function executeFormat(context, params) {\n  console.log('executeFormat called with params:', params);\n  \n  const worksheet = context.workbook.worksheets.getActiveWorksheet();\n  const range = params.range ? worksheet.getRange(params.range) : context.workbook.getSelectedRange();\n  \n  range.load(\"format\");\n  await context.sync();\n  \n  if (params.bold !== undefined) {\n    range.format.font.bold = params.bold;\n  }\n  \n  if (params.italic !== undefined) {\n    range.format.font.italic = params.italic;\n  }\n  \n  if (params.fontSize) {\n    range.format.font.size = params.fontSize;\n  }\n  \n  if (params.fontColor) {\n    range.format.font.color = params.fontColor;\n  }\n  \n  if (params.backgroundColor) {\n    range.format.fill.color = params.backgroundColor;\n  }\n  \n  if (params.horizontalAlignment) {\n    range.format.horizontalAlignment = params.horizontalAlignment === 'left' ? 'Left' :\n                                     params.horizontalAlignment === 'center' ? 'Center' :\n                                     params.horizontalAlignment === 'right' ? 'Right' : 'General';\n  }\n  \n  if (params.numberFormat) {\n    // Handle specific format types\n    let format = params.numberFormat;\n    if (format === 'number' || format === '숫자') {\n      format = '#,##0';\n    } else if (format === 'currency' || format === '원화' || format === 'won' || format === '통화') {\n      format = '₩#,##0';\n    } else if (format === 'currency_decimal' || format === '원화_소수') {\n      format = '₩#,##0.00';\n    } else if (format === 'percentage' || format === '퍼센트' || format === '백분율') {\n      format = '0%';\n    } else if (format === 'percentage_decimal' || format === '퍼센트_소수') {\n      format = '0.00%';\n    } else if (format === 'date' || format === '날짜') {\n      format = 'yyyy-mm-dd';\n    } else if (format === 'time' || format === '시간') {\n      format = 'hh:mm:ss';\n    } else if (format === 'text' || format === '텍스트') {\n      format = '@';\n    } else if (format === 'general' || format === '일반') {\n      format = 'General';\n    }\n    \n    // Set number format for the range\n    range.numberFormat = format;\n  }\n  \n  await context.sync();\n  \n  return {\n    success: true,\n    message: '서식이 적용되었습니다.'\n  };\n}\n\n// Sort data\nasync function executeSort(context, params) {\n  const worksheet = context.workbook.worksheets.getActiveWorksheet();\n  const range = params.range ? worksheet.getRange(params.range) : worksheet.getUsedRange();\n  \n  const column = params.column || 1;\n  const ascending = params.ascending !== undefined ? params.ascending : true;\n  \n  range.sort.apply([\n    {\n      key: column - 1, // Excel API uses 0-based index\n      ascending: ascending\n    }\n  ]);\n  \n  await context.sync();\n  \n  const columnLetter = getColumnLetter(column - 1);\n  \n  return {\n    success: true,\n    message: `${columnLetter}열 기준으로 ${ascending ? '오름차순' : '내림차순'} 정렬되었습니다.`\n  };\n}\n\n// Create chart\nasync function executeChart(context, params) {\n  const worksheet = context.workbook.worksheets.getActiveWorksheet();\n  const sourceData = params.range ? worksheet.getRange(params.range) : context.workbook.getSelectedRange();\n  \n  console.log('Creating chart with params:', params);\n  \n  // Load the source data to ensure it's available\n  sourceData.load([\"address\", \"values\"]);\n  await context.sync();\n  \n  console.log('Chart data range:', sourceData.address);\n  \n  // Determine chart type\n  let chartType;\n  if (params.chartType === 'bar' || params.chartType === '막대') {\n    chartType = Excel.ChartType.columnClustered;\n  } else if (params.chartType === 'line' || params.chartType === '선') {\n    chartType = Excel.ChartType.line;\n  } else if (params.chartType === 'pie' || params.chartType === '원') {\n    chartType = Excel.ChartType.pie;\n  } else if (params.chartType === 'scatter' || params.chartType === '분산형') {\n    chartType = Excel.ChartType.xyscatter;\n  } else {\n    // Default to column chart\n    chartType = Excel.ChartType.columnClustered;\n  }\n  \n  // Create the chart\n  const chart = worksheet.charts.add(chartType, sourceData, Excel.ChartSeriesBy.auto);\n  \n  // Set chart properties\n  chart.title.text = params.title || '차트';\n  chart.height = 300;\n  chart.width = 400;\n  \n  // Position the chart\n  chart.left = params.offsetX || 100;\n  chart.top = params.offsetY || 100;\n  \n  // Set legend position\n  chart.legend.position = Excel.ChartLegendPosition.bottom;\n  chart.legend.visible = true;\n  \n  await context.sync();\n  \n  return {\n    success: true,\n    message: `${sourceData.address} 범위로 ${params.chartType || '막대'} 차트가 생성되었습니다.`\n  };\n}\n\n// Add conditional formatting\nasync function executeConditionalFormat(context, params) {\n  const worksheet = context.workbook.worksheets.getActiveWorksheet();\n  const range = params.range ? worksheet.getRange(params.range) : worksheet.getUsedRange();\n  \n  console.log('Applying conditional format with params:', params);\n  \n  // Simply apply conditional format to the entire range\n  // Excel will automatically skip non-numeric cells for numeric comparisons\n  const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.cellValue);\n  \n  // Set the rule based on condition\n  if (params.condition === 'greater_than' && params.value !== undefined) {\n    conditionalFormat.cellValue.rule = {\n      formula1: params.value.toString(),\n      operator: Excel.ConditionalCellValueOperator.greaterThan\n    };\n  } else if (params.condition === 'less_than' && params.value !== undefined) {\n    conditionalFormat.cellValue.rule = {\n      formula1: params.value.toString(),\n      operator: Excel.ConditionalCellValueOperator.lessThan\n    };\n  } else if (params.condition === 'equal_to' && params.value !== undefined) {\n    conditionalFormat.cellValue.rule = {\n      formula1: params.value.toString(),\n      operator: Excel.ConditionalCellValueOperator.equalTo\n    };\n  } else if (params.condition === 'text_contains' && params.value !== undefined) {\n    conditionalFormat.cellValue.rule = {\n      formula1: params.value.toString(),\n      operator: Excel.ConditionalCellValueOperator.containsText\n    };\n  } else {\n    // Default to greater than\n    conditionalFormat.cellValue.rule = {\n      formula1: (params.value || 0).toString(),\n      operator: Excel.ConditionalCellValueOperator.greaterThan\n    };\n  }\n  \n  // Set the format\n  conditionalFormat.cellValue.format.fill.color = params.backgroundColor || \"#00FF00\";\n  if (params.fontColor) {\n    conditionalFormat.cellValue.format.font.color = params.fontColor;\n  }\n  if (params.bold) {\n    conditionalFormat.cellValue.format.font.bold = true;\n  }\n  \n  await context.sync();\n  \n  return {\n    success: true,\n    message: `조건부 서식이 적용되었습니다. (${params.condition} ${params.value || ''})`\n  };\n}\n\n// Translate column contents\nasync function executeTranslate(context, params) {\n  console.log('executeTranslate called with params:', params);\n  const worksheet = context.workbook.worksheets.getActiveWorksheet();\n  \n  if (!params.targetLanguage) {\n    return { success: false, error: '대상 언어를 지정해주세요.' };\n  }\n  \n  let sourceRange;\n  let targetColumnIndex;\n  \n  if (params.sourceRange) {\n    // Handle column ranges like \"C:C\" by intersecting with used range\n    if (params.sourceRange.match(/^[A-Z]+:[A-Z]+$/)) {\n      console.log('Handling column range:', params.sourceRange);\n      const usedRange = worksheet.getUsedRange();\n      if (!usedRange) {\n        return { success: false, error: '번역할 데이터가 없습니다.' };\n      }\n      \n      usedRange.load([\"rowCount\", \"columnCount\"]);\n      await context.sync();\n      \n      console.log('Used range:', {\n        rowCount: usedRange.rowCount,\n        columnCount: usedRange.columnCount\n      });\n      \n      // Get the column letter from the range (e.g., \"C\" from \"C:C\")\n      const columnLetter = params.sourceRange.split(':')[0];\n      const columnIndex = columnLetter.charCodeAt(0) - 65;\n      \n      // Get only the used portion of the column, starting from row 2 (skip header)\n      if (usedRange.rowCount > 1) {\n        sourceRange = worksheet.getRangeByIndexes(1, columnIndex, usedRange.rowCount - 1, 1);\n      } else {\n        return { success: false, error: '번역할 데이터가 없습니다.' };\n      }\n      \n      // Handle target range similarly\n      if (params.targetRange && params.targetRange.match(/^[A-Z]+:[A-Z]+$/)) {\n        const targetColumnLetter = params.targetRange.split(':')[0];\n        targetColumnIndex = targetColumnLetter.charCodeAt(0) - 65;\n        console.log('Target column calculation:', {\n          targetRange: params.targetRange,\n          targetColumnLetter,\n          targetColumnIndex\n        });\n      } else {\n        // If no target specified, use next column\n        targetColumnIndex = columnIndex + 1;\n        console.log('Using next column as target:', {\n          sourceColumnIndex: columnIndex,\n          targetColumnIndex\n        });\n      }\n    } else {\n      sourceRange = worksheet.getRange(params.sourceRange);\n    }\n  } else if (params.sourceColumn) {\n    const columnIndex = params.sourceColumn.charCodeAt(0) - 65;\n    const usedRange = worksheet.getUsedRange();\n    usedRange.load([\"rowCount\"]);\n    await context.sync();\n    \n    if (usedRange.rowCount > 1) {\n      sourceRange = worksheet.getRangeByIndexes(1, columnIndex, usedRange.rowCount - 1, 1);\n    } else {\n      return { success: false, error: '번역할 데이터가 없습니다.' };\n    }\n    \n    targetColumnIndex = params.targetColumn === 'next' ? columnIndex + 1 :\n                       params.targetColumn ? params.targetColumn.charCodeAt(0) - 65 : columnIndex + 1;\n  } else {\n    return { success: false, error: '번역할 열을 지정해주세요.' };\n  }\n  \n  sourceRange.load([\"values\", \"rowIndex\", \"columnIndex\", \"rowCount\"]);\n  await context.sync();\n  \n  console.log('Source range loaded:', {\n    rowIndex: sourceRange.rowIndex,\n    columnIndex: sourceRange.columnIndex,\n    rowCount: sourceRange.rowCount,\n    values: sourceRange.values ? `${sourceRange.values.length} rows` : 'null'\n  });\n  \n  const sourceValues = sourceRange.values;\n  if (!sourceValues || sourceValues.length === 0) {\n    return { success: false, error: '번역할 데이터가 없습니다.' };\n  }\n  \n  const translations = [];\n  const batchSize = 20;\n  \n  // Translate in batches\n  for (let i = 0; i < sourceValues.length; i += batchSize) {\n    const batch = sourceValues.slice(i, Math.min(i + batchSize, sourceValues.length));\n    const batchTexts = batch.map(row => row[0]).filter(text => text);\n    \n    if (batchTexts.length > 0) {\n      const translatedBatch = await translateBatch(batchTexts, params.targetLanguage, params.sourceLanguage);\n      \n      // Check if translatedBatch is valid\n      if (!translatedBatch || !Array.isArray(translatedBatch)) {\n        console.error('Invalid translation batch received:', translatedBatch);\n        // Fill with empty strings if translation failed\n        for (let j = 0; j < batch.length; j++) {\n          translations.push(['']);\n        }\n      } else {\n        console.log('Processing translation batch:', {\n          batchLength: batch.length,\n          translatedBatchLength: translatedBatch.length,\n          sampleTranslations: translatedBatch.slice(0, 3),\n          firstTranslation: translatedBatch[0],\n          translationType: typeof translatedBatch[0],\n          rawData: JSON.stringify(translatedBatch.slice(0, 3))\n        });\n        \n        let translationIndex = 0;\n        for (let j = 0; j < batch.length; j++) {\n          if (batch[j][0]) {\n            const translatedText = translatedBatch[translationIndex] || '';\n            translations.push([translatedText]);\n            if (j < 3) {\n              console.log(`Translation ${j}: \"${batch[j][0]}\" -> \"${translatedText}\"`);\n            }\n            translationIndex++;\n          } else {\n            translations.push(['']);\n          }\n        }\n      }\n    } else {\n      for (let j = 0; j < batch.length; j++) {\n        translations.push(['']);\n      }\n    }\n    \n    // Show progress\n    if (i % 100 === 0 && i > 0) {\n      showStatus(`번역 중... ${Math.round((i / sourceValues.length) * 100)}%`, 'info');\n    }\n  }\n  \n  // Write translations\n  console.log('Writing translations to target column:', {\n    rowIndex: sourceRange.rowIndex,\n    targetColumnIndex: targetColumnIndex || sourceRange.columnIndex + 1,\n    translationsCount: translations.length,\n    sampleTranslations: translations.slice(0, 3).map(t => t[0])\n  });\n  console.log('First 5 translations raw:', JSON.stringify(translations.slice(0, 5)));\n  console.log('Translation content check:', {\n    first: translations[0] ? translations[0][0] : 'null',\n    second: translations[1] ? translations[1][0] : 'null',\n    third: translations[2] ? translations[2][0] : 'null',\n    isEmpty: translations[0] && translations[0][0] === ''\n  });\n  \n  const targetRange = worksheet.getRangeByIndexes(\n    sourceRange.rowIndex,\n    targetColumnIndex || sourceRange.columnIndex + 1,\n    translations.length,\n    1\n  );\n  \n  targetRange.load([\"address\", \"values\"]);\n  await context.sync();\n  console.log('Target range address:', targetRange.address);\n  console.log('Existing target values (first 3):', targetRange.values.slice(0, 3));\n  \n  // Clear existing values first\n  targetRange.clear(Excel.ClearApplyTo.contents);\n  await context.sync();\n  console.log('Target range cleared');\n  \n  // Ensure translations are properly formatted as 2D array\n  console.log('Setting target range values:', {\n    translationsLength: translations.length,\n    firstTranslation: translations[0],\n    isArray: Array.isArray(translations),\n    is2DArray: Array.isArray(translations[0])\n  });\n  \n  // Try setting values with explicit string conversion\n  const stringTranslations = translations.map(row => [String(row[0] || '')]);\n  console.log('String translations (first 3):', stringTranslations.slice(0, 3));\n  \n  // Try using numberFormat to ensure cells are treated as text\n  targetRange.numberFormat = [[\"@\"]]; // @ means text format\n  await context.sync();\n  \n  targetRange.values = stringTranslations;\n  \n  // Force Excel to update\n  targetRange.format.autofitColumns();\n  targetRange.format.font.color = \"#000000\"; // Ensure text is visible\n  targetRange.format.fill.color = \"#FFFFFF\"; // White background\n  \n  await context.sync();\n  console.log('Translations written to Excel');\n  \n  // Verify the values were actually written\n  targetRange.load([\"values\", \"text\", \"valueTypes\"]);\n  await context.sync();\n  console.log('Verification - Target range:', {\n    address: targetRange.address,\n    values: targetRange.values.slice(0, 3),\n    text: targetRange.text.slice(0, 3),\n    valueTypes: targetRange.valueTypes.slice(0, 3),\n    actualFirstValue: targetRange.values[0] ? targetRange.values[0][0] : 'null',\n    firstThreeValues: [\n      targetRange.values[0] ? targetRange.values[0][0] : 'empty',\n      targetRange.values[1] ? targetRange.values[1][0] : 'empty',\n      targetRange.values[2] ? targetRange.values[2][0] : 'empty'\n    ]\n  });\n  \n  // Try alternative method - set each cell individually for debugging\n  if (translations.length > 0) {\n    const isEmpty = !targetRange.values[0] || !targetRange.values[0][0] || targetRange.values[0][0] === '';\n    console.log('Checking if values are empty:', {\n      isEmpty,\n      firstValue: targetRange.values[0] ? targetRange.values[0][0] : 'null',\n      firstValueLength: targetRange.values[0] && targetRange.values[0][0] ? targetRange.values[0][0].length : 0\n    });\n    \n    if (isEmpty) {\n      console.log('Values not visible, trying individual cell approach...');\n      // Try setting just the first few cells individually\n      for (let i = 0; i < Math.min(3, translations.length); i++) {\n        const cellRow = sourceRange.rowIndex + i;\n        const cellCol = targetColumnIndex || sourceRange.columnIndex + 1;\n        const cell = worksheet.getCell(cellRow, cellCol);\n        const cellValue = stringTranslations[i][0];\n        \n        console.log(`Setting cell (${cellRow},${cellCol}) to: \"${cellValue}\"`);\n        cell.values = [[cellValue]];\n        cell.format.font.color = \"#000000\";\n        cell.format.fill.color = \"#FFFF00\"; // Yellow background to make it visible\n        \n        await context.sync();\n        \n        // Verify it was set\n        cell.load(\"values\");\n        await context.sync();\n        console.log(`Cell ${i} after setting:`, cell.values[0][0]);\n      }\n    }\n  }\n  \n  // Add header\n  const headerCell = worksheet.getCell(0, targetColumnIndex || sourceRange.columnIndex + 1);\n  const sourceHeaderCell = worksheet.getCell(0, sourceRange.columnIndex);\n  sourceHeaderCell.load(\"values\");\n  await context.sync();\n  \n  headerCell.values = [[`${sourceHeaderCell.values[0][0]} (${params.targetLanguage})`]];\n  await context.sync();\n  \n  return {\n    success: true,\n    message: `번역이 완료되었습니다. (${sourceValues.length}개 항목)`\n  };\n}\n\n// Translate a batch of texts through proxy\nasync function translateBatch(texts, targetLanguage, sourceLanguage) {\n  try {\n    console.log('translateBatch called with', texts.length, 'texts');\n    const response = await fetch(API_PROXY_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        command: `Translate these items to ${targetLanguage}: ${texts.join(', ')}`,\n        sheetContext: {\n          operation: 'translate_batch',\n          texts: texts,\n          targetLanguage: targetLanguage,\n          sourceLanguage: sourceLanguage\n        }\n      })\n    });\n    \n    console.log('Translation response status:', response.status);\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const result = await response.json();\n    console.log('Translation result:', result);\n    \n    if (result.success && result.data && result.data.translations) {\n      console.log('Translations received:', result.data.translations.length);\n      return result.data.translations;\n    } else if (result.error) {\n      console.error('Translation API error:', result.error);\n      throw new Error(result.error);\n    } else {\n      console.error('Invalid translation response structure:', result);\n      throw new Error('번역 응답을 받을 수 없습니다.');\n    }\n  } catch (error) {\n    console.error('Translation error:', error);\n    return texts.map(() => '');\n  }\n}\n\n// Helper functions\nfunction getColumnLetter(columnIndex) {\n  let columnLetter = '';\n  let tempIndex = columnIndex;\n  \n  while (tempIndex >= 0) {\n    columnLetter = String.fromCharCode((tempIndex % 26) + 65) + columnLetter;\n    tempIndex = Math.floor(tempIndex / 26) - 1;\n  }\n  \n  return columnLetter;\n}\n\nfunction formatNumber(value) {\n  if (typeof value === 'number') {\n    if (Number.isInteger(value)) {\n      return value.toLocaleString('ko-KR');\n    } else {\n      return value.toLocaleString('ko-KR', { minimumFractionDigits: 0, maximumFractionDigits: 2 });\n    }\n  }\n  return value;\n}\n\nfunction showStatus(message, type) {\n  const status = document.getElementById('status');\n  status.textContent = message;\n  status.className = 'status-message ' + type;\n  status.style.display = 'block';\n  \n  if (window.statusTimeout) {\n    clearTimeout(window.statusTimeout);\n  }\n  \n  if (type === 'success') {\n    window.statusTimeout = setTimeout(() => {\n      status.style.display = 'none';\n    }, 5000);\n  }\n}\n\nfunction clearInput() {\n  document.getElementById('commandInput').value = '';\n  document.getElementById('status').style.display = 'none';\n}\n\nfunction setCommand(command) {\n  document.getElementById('commandInput').value = command;\n  document.getElementById('commandInput').focus();\n}\n\nfunction showSettings() {\n  showStatus('이 애드인은 보안 서버를 통해 AI 기능을 제공합니다. 별도의 API 키 설정이 필요하지 않습니다.', 'info');\n}\n\n// Test backend connection\nasync function testBackendConnection() {\n  try {\n    console.log('Testing backend connection...');\n    const testUrl = 'https://excel-addon-backend.vercel.app/api/test';\n    \n    const response = await fetch(testUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ test: true })\n    });\n    \n    console.log('Test response status:', response.status);\n    console.log('Test response headers:', response.headers);\n    \n    const data = await response.json();\n    console.log('Test response data:', data);\n    \n    showStatus('백엔드 연결 테스트 성공', 'success');\n  } catch (error) {\n    console.error('Backend test error:', error);\n    showStatus('백엔드 연결 테스트 실패: ' + error.message, 'error');\n  }\n}\n\n// Additional operations (compress, filter, insert, delete, formula, retry_translation)\n// These would need to be implemented based on Excel JavaScript API capabilities\n\nasync function executeCompress(context, params) {\n  // Implementation would be similar to Google Sheets version\n  // but using Excel JavaScript API\n  return {\n    success: false,\n    error: '이 기능은 현재 구현 중입니다.'\n  };\n}\n\nasync function executeFilter(context, params) {\n  const worksheet = context.workbook.worksheets.getActiveWorksheet();\n  const range = params.range ? worksheet.getRange(params.range) : worksheet.getUsedRange();\n  \n  // Apply autofilter\n  range.worksheet.autoFilter.apply(range);\n  \n  await context.sync();\n  \n  return {\n    success: true,\n    message: '필터가 적용되었습니다.'\n  };\n}\n\nasync function executeInsert(context, params) {\n  const worksheet = context.workbook.worksheets.getActiveWorksheet();\n  const type = params.type || 'row';\n  const position = params.position || 1;\n  const count = params.count || 1;\n  \n  if (type === 'row') {\n    const range = worksheet.getRangeByIndexes(position - 1, 0, count, 1);\n    range.insert(Excel.InsertShiftDirection.down);\n  } else {\n    const range = worksheet.getRangeByIndexes(0, position - 1, 1, count);\n    range.insert(Excel.InsertShiftDirection.right);\n  }\n  \n  await context.sync();\n  \n  return {\n    success: true,\n    message: `${count}개의 ${type === 'row' ? '행' : '열'}이 삽입되었습니다.`\n  };\n}\n\nasync function executeDelete(context, params) {\n  const worksheet = context.workbook.worksheets.getActiveWorksheet();\n  const type = params.type || 'row';\n  const position = params.position || 1;\n  const count = params.count || 1;\n  \n  if (type === 'row') {\n    const range = worksheet.getRangeByIndexes(position - 1, 0, count, 1);\n    range.delete(Excel.DeleteShiftDirection.up);\n  } else {\n    const range = worksheet.getRangeByIndexes(0, position - 1, 1, count);\n    range.delete(Excel.DeleteShiftDirection.left);\n  }\n  \n  await context.sync();\n  \n  return {\n    success: true,\n    message: `${count}개의 ${type === 'row' ? '행' : '열'}이 삭제되었습니다.`\n  };\n}\n\nasync function executeFormula(context, params) {\n  const worksheet = context.workbook.worksheets.getActiveWorksheet();\n  const range = params.range ? worksheet.getRange(params.range) : context.workbook.getSelectedRange();\n  \n  if (!params.formula) {\n    return { success: false, error: '수식을 지정해주세요.' };\n  }\n  \n  range.formulas = [[params.formula]];\n  await context.sync();\n  \n  return {\n    success: true,\n    message: '수식이 적용되었습니다.'\n  };\n}\n\nasync function executeRetryTranslation(context, params) {\n  // Implementation would be similar to Google Sheets version\n  // but using Excel JavaScript API\n  return {\n    success: false,\n    error: '이 기능은 현재 구현 중입니다.'\n  };\n}"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_regeneratorDefine","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","recognition","isListening","API_PROXY_URL","process","env","Office","onReady","info","host","HostType","Excel","testBackendConnection","document","getElementById","onclick","executeCommand","clearInput","toggleVoiceRecognition","showSettings","exampleItems","querySelectorAll","forEach","item","setCommand","getAttribute","addEventListener","event","key","shiftKey","preventDefault","initializeSpeechRecognition","SpeechRecognition","window","webkitSpeechRecognition","showStatus","disabled","textContent","lang","continuous","interimResults","maxAlternatives","onstart","classList","add","onresult","transcript","results","isFinal","onerror","remove","errorMessage","error","onend","command","trim","focus","stop","start","isExecuting","_executeCommand","_callee2","button","originalText","_t","_context2","console","log","innerHTML","run","_ref","_callee","context","worksheet","range","usedRange","sheetContext","headerRow","interpretation","result","_context","workbook","worksheets","getActiveWorksheet","getSelectedRange","load","getUsedRange","sync","sheetName","name","activeRange","address","row","rowIndex","column","columnIndex","numRows","rowCount","numColumns","columnCount","lastRow","lastColumn","headers","dataRange","values","isLargeSheet","push","columnLetter","getColumnLetter","label","toString","callOpenAI","success","Error","executeInterpretedCommand","data","message","setTimeout","_x38","stack","_x","_x2","_callOpenAI","_callee3","response","errorData","_t2","_context3","fetch","method","body","JSON","stringify","ok","json","concat","status","callOpenAIDirectly","_x3","_x4","_callOpenAIDirectly","_callee4","systemPrompt","url","payload","_errorData$error","content","parsedCommand","_t3","_t4","_context4","map","h","join","model","messages","role","temperature","max_tokens","OPENAI_API_KEY","choices","parse","_x5","_x6","_executeInterpretedCommand","_callee5","commandData","operation","params","_t5","_t6","_context5","parameters","Date","toISOString","executeMerge","executeSum","executeAverage","executeCount","executeFormat","executeSort","executeFilter","executeInsert","executeDelete","executeFormula","executeChart","executeConditionalFormat","executeTranslate","executeCompress","executeRetryTranslation","_x7","_x8","_executeMerge","_callee6","rangeAddress","_context6","getRange","merge","_x9","_x0","_executeSum","_callee7","lastDataRow","sumCell","sourceRange","newCell","targetCell","_column","_lastRow","_newCell","_context7","columnName","sumType","toLowerCase","undefined","getCell","formulas","formatNumber","addNewRow","_x1","_x10","_executeAverage","_callee8","_context8","_x11","_x12","_executeCount","_callee9","formula","criteria","resultCell","lastCol","_context9","countType","condition","operator","includes","_x13","_x14","_executeFormat","_callee0","format","_context0","bold","font","italic","fontSize","size","fontColor","color","backgroundColor","fill","horizontalAlignment","numberFormat","_x15","_x16","_executeSort","_callee1","ascending","_context1","sort","_x17","_x18","_executeChart","_callee10","sourceData","chartType","chart","_context10","ChartType","columnClustered","line","pie","xyscatter","charts","ChartSeriesBy","auto","title","text","height","width","left","offsetX","top","offsetY","legend","position","ChartLegendPosition","bottom","visible","_x19","_x20","_executeConditionalFormat","_callee11","conditionalFormat","_context11","conditionalFormats","ConditionalFormatType","cellValue","rule","formula1","ConditionalCellValueOperator","greaterThan","lessThan","equalTo","containsText","_x21","_x22","_executeTranslate","_callee12","targetColumnIndex","targetColumnLetter","_columnIndex","_usedRange","sourceValues","translations","batchSize","batch","batchTexts","translatedBatch","j","translationIndex","_j","translatedText","_j2","targetRange","stringTranslations","isEmpty","_i","cellRow","cellCol","cell","headerCell","sourceHeaderCell","_context12","targetLanguage","match","split","charCodeAt","getRangeByIndexes","sourceColumnIndex","sourceColumn","targetColumn","slice","Math","min","filter","translateBatch","sourceLanguage","Array","isArray","batchLength","translatedBatchLength","sampleTranslations","firstTranslation","translationType","_typeof","rawData","round","translationsCount","first","second","third","clear","ClearApplyTo","contents","translationsLength","is2DArray","String","autofitColumns","valueTypes","actualFirstValue","firstThreeValues","firstValue","firstValueLength","_x23","_x24","_x25","_translateBatch","_callee13","texts","_t7","_context13","tempIndex","fromCharCode","floor","Number","isInteger","toLocaleString","minimumFractionDigits","maximumFractionDigits","type","className","style","display","statusTimeout","clearTimeout","_testBackendConnection","_callee14","testUrl","_t8","_context14","test","_x26","_x27","_executeCompress","_callee15","_context15","_x28","_x29","_executeFilter","_callee16","_context16","autoFilter","_x30","_x31","_executeInsert","_callee17","count","_range","_context17","insert","InsertShiftDirection","down","right","_x32","_x33","_executeDelete","_callee18","_range2","_context18","delete","DeleteShiftDirection","up","_x34","_x35","_executeFormula","_callee19","_context19","_x36","_x37","_executeRetryTranslation","_callee20","_context20"],"sourceRoot":""}